library(tidyverse)#
#
load("~/Downloads/superlig2.RData")
superlig2017 %>% tbl_df()
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    tbl_df()
?separate
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    tbl_df()
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    tbl_df()
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & home_score > away_score,1,0)) %>%#
    tbl_df()
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    tbl_df()
tidy_df<-#
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    tbl_df()
tidy_df %>% filter(BetExplorer_Match_ID=="069Zrjgm")
tidy_df<-#
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    select(match_id=BetExplorer_Match_ID,match_date=Match_Date,team,home_away,bet_win_type,bet_rate,outcome,everything())#
    tbl_df()
tidy_df<-#
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    select(match_id=BetExplorer_Match_ID,match_date=Match_Date,team,home_away,bet_win_type,bet_rate,outcome,everything()) %>%#
    tbl_df()
tidy_df
tidy_df %>%#
    group_by(bet_win_type) %>%#
    summarise(winning_rate=weighted.mean(bet_rate,outcome),winning_ratio_weighted=weighted.mean(outcome,bet_rate),winning_ratio=mean(outcome))
tidy_df %>%#
    filter(team=="Galatasaray")
gs_data <-#
tidy_df %>%#
    filter(team=="Galatasaray") #
#
ggplot(gs_data) + geom_bar(stat="identity",aes(x=bet_win_type,y=outcome))
ggplot(gs_data) + geom_bar(stat="identity",aes(x=bet_win_type,y=bet_rate*outcome))
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(match_id)
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(match_id) %>%#
    group_by(home_away,bet_win_type) %>%#
    summarise(sum(bet_rate*outcome)/n())
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(match_id) %>%#
    print(n=50)
tidy_df<-#
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    mutate(win_lose=ifelse(bet_win_type==home_away & outcome==1,"Win","Lose")) %>%#
    mutate(win_lose=ifelse(bet_win_type=="Tie" & outcome==1,"Tie",win_lose)) %>%#
    select(match_id=BetExplorer_Match_ID,match_date=Match_Date,team,home_away,bet_win_type,bet_rate,outcome,everything()) %>%#
    tbl_df()
tidy_df<-#
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    mutate(win_lose=ifelse(bet_win_type==home_away & outcome==1,"Win","Lose")) %>%#
    mutate(win_lose=ifelse(bet_win_type=="Tie" & outcome==1,"Tie",win_lose)) %>%#
    select(match_id=BetExplorer_Match_ID,match_date=Match_Date,team,home_away,win_lose,bet_win_type,bet_rate,outcome,everything()) %>%#
    tbl_df()
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(match_date)
tidy_df<-#
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    mutate(win_lose=ifelse(bet_win_type==home_away & outcome==1,"Win","Lose")) %>%#
    mutate(win_lose=ifelse(bet_win_type=="Tie" & outcome==1,"Tie",win_lose)) %>%#
    mutate(Match_Date=as.Date(Match_Date,format="%d.%m.%Y")) %>%#
    select(match_id=BetExplorer_Match_ID,match_date=Match_Date,team,home_away,win_lose,bet_win_type,bet_rate,outcome,everything()) %>%#
    tbl_df()
tidy_df
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(match_date) %>%#
    print(n=50)
tidy_df<-#
superlig2017 %>% #
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    mutate(win_lose=ifelse(bet_win_type==home_away & outcome==1,"Win","Lose")) %>%#
    mutate(win_lose=ifelse(bet_win_type=="Tie","Tie",win_lose)) %>%#
    mutate(Match_Date=as.Date(Match_Date,format="%d.%m.%Y")) %>%#
    select(match_id=BetExplorer_Match_ID,match_date=Match_Date,team,home_away,win_lose,bet_win_type,bet_rate,outcome,everything()) %>%#
    tbl_df()
tidy_df
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(match_date) %>%#
    print(n=50)
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(match_date) %>%#
    print(n=50)#
    group_by(win_lose) %>%#
    summarise(sum(bet_rate*outcome)/n())
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(win_lose) %>%#
    summarise(sum(bet_rate*outcome)/n())
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(home_away,match_date) %>%#
    # print(n=50)#
    group_by(win_lose) %>%#
    summarise(sum(bet_rate*outcome)/n())
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(sum(bet_rate*outcome)/n())
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n())
tidy_df %>%#
    filter(team=="Beşiktaş") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n())
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n())
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(mean_bet_rate=mean(bet_rate),returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n())
superlig2017
superlig2017 %>%#
    gather(home_away,team,-BetExplorer_Match_ID,-(Score:Match_Date))
superlig2017 %>%#
    gather(key=home_away,value=team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team))
superlig2017 %>%#
    gather(key=home_away,value=team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type))
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date)
tidy_df %>% filter(match_id=="4zO3lCVP")
tidy_df<-#
superlig2017 %>%#
    gather(key=home_away,value=team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Away" & home_score < away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    # mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    # mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    # mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    mutate(win_lose=ifelse(bet_win_type==home_away & outcome==1,"Win","Lose")) %>%#
    mutate(win_lose=ifelse(bet_win_type=="Tie","Tie",win_lose)) %>%#
    mutate(Match_Date=as.Date(Match_Date,format="%d.%m.%Y")) %>%#
    select(match_id=BetExplorer_Match_ID,match_date=Match_Date,team,home_away,win_lose,bet_win_type,bet_rate,outcome,everything()) %>%#
    tbl_df()
tidy_df %>% filter(match_id=="4zO3lCVP")
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(mean_bet_rate=mean(bet_rate),returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n())
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(mean_bet_rate=mean(bet_rate),returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n(),count=n())
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date)
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>% print(n=50)
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(mean_bet_rate=mean(bet_rate),returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n(),count=sum(outcome))
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(mean_bet_rate=mean(bet_rate),returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n(),count=n(),realized=sum(outcome))
superlig2017 %>%#
    gather(key=home_away,value=team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Away" & home_score < away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome))
superlig2017 %>%#
    gather(key=home_away,value=team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Away" & home_score < away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>% arrange(match_id) %>% tbl_df()
superlig2017 %>%#
    gather(key=home_away,value=team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Away" & home_score < away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>% arrange(BetExplorer_Match_ID) %>% tbl_df()
tidy_df<-#
superlig2017 %>%#
    gather(key=home_away,value=team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Away" & home_score < away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    mutate(win_lose=ifelse(home_away=="Home" & home_score > away_score,"Win","Tie")) %>%#
    mutate(win_lose=ifelse(home_away=="Away" & home_score < away_score,"Lose",win_lose)) %>%#
    # mutate(win_lose=ifelse(home_away=="Tie" & home_score == away_score,1,outcome)) %>%#
    # mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    # mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    # mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    # mutate(win_lose=ifelse(bet_win_type==home_away & outcome==1,"Win","Lose")) %>%#
    # mutate(win_lose=ifelse(bet_win_type=="Tie","Tie",win_lose)) %>%#
    mutate(Match_Date=as.Date(Match_Date,format="%d.%m.%Y")) %>%#
    select(match_id=BetExplorer_Match_ID,match_date=Match_Date,team,home_away,win_lose,bet_win_type,bet_rate,outcome,everything()) %>%#
    tbl_df()
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date)
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>% print(n=21)
tidy_df %>% filter(match_id=="IHxhEYlk")
tidy_df<-#
superlig2017 %>%#
    gather(key=home_away,value=team,-BetExplorer_Match_ID,-(Score:Match_Date)) %>%#
    separate(Score,into=c("home_score","away_score"),sep=":") %>%#
    gather(bet_win_type,bet_rate,-(BetExplorer_Match_ID:away_score),-(Match_Date:team)) %>%#
    mutate(bet_win_type=gsub("_Close_Average","",bet_win_type)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Away" & home_score < away_score,1,outcome)) %>%#
    mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    mutate(win_lose=ifelse(home_away=="Home" & home_score > away_score,"Win","Lose")) %>%#
    mutate(win_lose=ifelse(home_away=="Away" & home_score < away_score,"Win",win_lose)) %>%#
    mutate(win_lose=ifelse(home_score == away_score,"Tie",win_lose)) %>%#
    # mutate(win_lose=ifelse(home_away=="Tie" & home_score == away_score,1,outcome)) %>%#
    # mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Home" & home_score > away_score,1,0)) %>%#
    # mutate(outcome=ifelse(bet_win_type=="Tie" & home_score == away_score,1,outcome)) %>%#
    # mutate(outcome=ifelse(bet_win_type==home_away & bet_win_type=="Away" & away_score > home_score,1,outcome)) %>%#
    # mutate(win_lose=ifelse(bet_win_type==home_away & outcome==1,"Win","Lose")) %>%#
    # mutate(win_lose=ifelse(bet_win_type=="Tie","Tie",win_lose)) %>%#
    mutate(Match_Date=as.Date(Match_Date,format="%d.%m.%Y")) %>%#
    select(match_id=BetExplorer_Match_ID,match_date=Match_Date,team,home_away,win_lose,bet_win_type,bet_rate,outcome,everything()) %>%#
    tbl_df()
tidy_df %>% filter(match_id=="IHxhEYlk")
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(mean_bet_rate=mean(bet_rate),returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n(),count=n(),realized=sum(outcome))
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(mean_bet_rate=mean(bet_rate),returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n(),count=n()/3,realized=sum(outcome))
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date)
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>% print(n=21)
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,win_lose) %>%#
    summarise(mean_bet_rate=mean(bet_rate),returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n(),count=n(),realized=sum(outcome))
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date)
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(mean_bet_rate=mean(bet_rate),returns=sum(bet_rate*outcome)/n(),ratio=sum(outcome)/n(),realized=sum(outcome))
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(mean_bet_rate=mean(bet_rate),returns=sum(bet_rate*outcome)/n(),count=n(),ratio=sum(outcome)/n(),realized=sum(outcome))
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(#
        count=n(),#
        ratio=sum(outcome)/n(),#
        realized=sum(outcome),#
        mean_bet_rate=mean(bet_rate),#
                returns=sum(bet_rate*outcome)/n())
tidy_df %>%#
    filter(team=="Besiktas") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(#
        count=n(),#
        mean_bet_rate=mean(bet_rate),#
        realized=sum(outcome),#
        ratio=sum(outcome)/n(),#
        returns=sum(bet_rate*outcome)/n())
tidy_df %>%#
    filter(team=="Fenerbahce") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(#
        count=n(),#
        mean_bet_rate=mean(bet_rate),#
        realized=sum(outcome),#
        ratio=sum(outcome)/n(),#
        returns=sum(bet_rate*outcome)/n())
tidy_df %>%#
    filter(team=="Fenerbahce") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(#
        count=n(),#
        mean_bet_rate=mean(bet_rate),#
        realized=sum(outcome),#
        ratio=sum(outcome)/n(),#
        returns=sum(bet_rate*outcome)/n()) %>%#
    arrange(desc(returns))
tidy_df %>%#
    filter(team=="Fenerbahce") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(#
        count=n(),#
        mean_bet_rate=mean(bet_rate),#
        realized=sum(outcome),#
        ratio=sum(outcome)/n(),#
        pnl=round(sum(bet_rate*outcome)/n()-1,2)) %>%#
    mutate(profit_loss=ifelse(returns>1,"Profit","Loss"))#
    arrange(desc(returns))
tidy_df %>%#
    filter(team=="Fenerbahce") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(#
        count=n(),#
        mean_bet_rate=mean(bet_rate),#
        realized=sum(outcome),#
        ratio=sum(outcome)/n(),#
        pnl=round(sum(bet_rate*outcome)/n()-1,2)) %>%#
    mutate(profit_loss=ifelse(pnl>1,"Profit","Loss")) %>%#
    arrange(desc(pnl))
tidy_df %>%#
    filter(team=="Fenerbahce") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(#
        count=n(),#
        mean_bet_rate=mean(bet_rate),#
        realized=sum(outcome),#
        ratio=sum(outcome)/n(),#
        pnl=round(sum(bet_rate*outcome)/n()-1,2)) %>%#
    mutate(profit_loss=ifelse(pnl>0,"Profit","Loss")) %>%#
    arrange(desc(pnl))
?format
team_data <-#
tidy_df %>%#
    filter(team=="Fenerbahce") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(#
        count=n(),#
        mean_bet_rate=mean(bet_rate),#
        realized=sum(outcome),#
        ratio=round(sum(outcome)/n(),2),#
        pnl=round(sum(bet_rate*outcome)/n()-1,2)) %>%#
    mutate(profit_loss=ifelse(pnl>0,"Profit","Loss")) %>%#
    arrange(desc(pnl))
team_data
tidy_df %>%#
    filter(team=="Galatasaray") %>%#
    mutate(bet_win_lose=ifelse(home_away==bet_win_type,"Win","Lose"),#
            bet_win_lose=ifelse(bet_win_type=="Tie","Tie",bet_win_lose)) %>%#
    arrange(match_date) %>%#
    # print(n=50)#
    group_by(home_away,bet_win_lose) %>%#
    summarise(#
        count=n(),#
        mean_bet_rate=mean(bet_rate),#
        realized=sum(outcome),#
        ratio=round(sum(outcome)/n(),2),#
        pnl=round(sum(bet_rate*outcome)/n()-1,2)) %>%#
    mutate(profit_loss=ifelse(pnl>0,"Profit","Loss")) %>%#
    arrange(desc(pnl))
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
read_xlsx("https://github.com/berkorbay/datashow/blob/master/bsoyer/datashow_berkaysoyer.xlsx?raw=true",sheet=1)
download.file("https://github.com/berkorbay/datashow/blob/master/bsoyer/datashow_berkaysoyer.xlsx?raw=true","~/Documents/bsoyer.xlsx")
setwd("~/git_repositories/datashow/bsoyer/")
employee_raw <- read_xlsx("datashow_berkaysoyer.xlsx",sheet="Sheet1")#
contribution_raw <- read_xlsx("datashow_berkaysoyer.xlsx",sheet="Sheet2")
employee_raw
contribution_raw
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
options(dplyr.width=Inf)
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
left_join(employee_raw,contribution_raw,by=c("FeatureKeys,TeamKeys"))
employee_raw
contribution_raw
left_join(employee_raw,contribution_raw,by=c("FeatureKeys,TeamKeys"))
left_join(employee_raw,contribution_raw,by=c("FeatureKeys","TeamKeys"))
contribution_raw <- contribution_raw %>% distinct(FeatureKeys,TeamKeys,.keep_all=TRUE)
contribution_raw
contribution_raw <- contribution_raw %>% distinct(FeatureKeys,TeamKeys,.keep_all=TRUE)#
#Although each feature is assigned to a separate team let's still join by both features and teams.#
merged_data <- left_join(employee_raw,contribution_raw,by=c("FeatureKeys","TeamKeys"))
merged_data
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
merged_data %>% mutate_at(.vars(starts_with("business_stream"),.funs(ifelse(is.na(.),0,.))))
?mutate_at
merged_data %>% mutate_at(vars(starts_with("business_stream"),funs(ifelse(is.na(.),0,.))))
merged_data %>% mutate_at(vars(starts_with("business_stream")),funs(ifelse(is.na(.),0,.)))
merged_data <- merged_data %>% mutate_at(vars(starts_with("business_stream")),funs(ifelse(is.na(.),0,.)))
merged_data %>% summarise_all(funs(sum(is.na(.))))
merged_data %>% summarise_all(funs(sum(is.na(.)))) %>% gather()
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
merged_data %>% select(AssigneeKeys,starts_with("business_stream")) %>% gather(bstream,value,-AssigneeKeys)
merged_data %>%#
    #Get just the required columns#
    select(AssigneeKeys,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids#
    gather(bstream,value,-AssigneeKeys) %>%#
    #Group them for summary table#
    group_by(AssigneeKeys) %>%#
    mutate(value_perc=value/sum(value))
merged_data %>%#
    #Get just the required columns#
    select(AssigneeKeys,Updated,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids or datetime#
    gather(bstream,value,-AssigneeKeys,-Updated) %>%#
    #Group them by employees to get fractional contributions#
    group_by(AssigneeKeys) %>%#
    mutate(value_perc=value/sum(value))#
    ungroup()
merged_data %>%#
    arrange(Updated) %>%#
    #Get just the required columns#
    select(AssigneeKeys,Updated,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids or datetime#
    gather(bstream,value,-AssigneeKeys,-Updated) %>%#
    #Group them by employees to get fractional contributions#
    group_by(AssigneeKeys) %>%#
    #Get fractional contributions in each group#
    mutate(value_perc=value/sum(value),cum_value=cumsum(value)) %>%#
    #Ungroup#
    ungroup()
summary_raw <-#
merged_data %>%#
    arrange(AssigneeKeys,Updated) %>%#
    #Get just the required columns#
    select(AssigneeKeys,Updated,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids or datetime#
    gather(bstream,value,-AssigneeKeys,-Updated) %>%#
    #Group them by employees to get fractional contributions#
    group_by(AssigneeKeys) %>%#
    #Get fractional contributions in each group#
    mutate(value_perc=value/sum(value),cum_value=cumsum(value)) %>%#
    #Ungroup#
    ungroup()
summary_raw
summary_raw <-#
merged_data %>%#
    arrange(AssigneeKeys,Updated) %>%#
    #Get just the required columns#
    select(AssigneeKeys,Updated,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids or datetime#
    gather(bstream,value,-AssigneeKeys,-Updated) %>%#
    #We wanted to see by month so let's get months with lubridate::month function#
    mutate(task_month=month(Updated))#
    #Group them by employees to get fractional contributions#
    group_by(AssigneeKeys) %>%#
    #Get fractional contributions in each group#
    mutate(value_perc=value/sum(value),cum_value=cumsum(value)) %>%#
    #Ungroup#
    ungroup()
summary_raw <-#
merged_data %>%#
    arrange(AssigneeKeys,Updated) %>%#
    #Get just the required columns#
    select(AssigneeKeys,Updated,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids or datetime#
    gather(bstream,value,-AssigneeKeys,-Updated) %>%#
    #We wanted to see by month so let's get months with lubridate::month function#
    mutate(task_month=month(Updated)) %>%#
    #Group them by employees to get fractional contributions#
    group_by(AssigneeKeys) %>%#
    #Get fractional contributions in each group#
    mutate(value_perc=value/sum(value),cum_value=cumsum(value)) %>%#
    #Ungroup#
    ungroup()
summary_raw
merged_data %>%#
    arrange(AssigneeKeys,Updated) %>%#
    #Get just the required columns#
    select(AssigneeKeys,Updated,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids or datetime#
    gather(bstream,value,-AssigneeKeys,-Updated) %>%#
    #We wanted to see by month so let's get months with lubridate::month function#
    mutate(task_month=month(Updated)) %>%#
    #Group them by employees to get fractional contributions#
    group_by(AssigneeKeys) %>%#
    #Get fractional contributions in each group#
    mutate(value_perc=value/sum(value),cum_value_perc=cumsum(value_perc)) %>%#
    #Ungroup#
    ungroup()
merged_data %>%#
    #Get just the required columns#
    select(AssigneeKeys,Updated,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids or datetime#
    gather(bstream,value,-AssigneeKeys,-Updated) %>%#
    #Order the data so we can see each employee's contribution to business streams in time#
    arrange(AssigneeKeys,bstream,Updated) %>%#
    #We wanted to see by month so let's get months with lubridate::month function#
    mutate(task_month=month(Updated)) %>%#
    #Group them by employees to get fractional contributions#
    group_by(AssigneeKeys) %>%#
    #Get fractional contributions in each group#
    mutate(value_perc=value/sum(value)) %>%#
    #Ungroup#
    ungroup()
summary_raw <-#
merged_data %>%#
    #Get just the required columns#
    select(AssigneeKeys,Updated,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids or datetime#
    gather(bstream,value,-AssigneeKeys,-Updated) %>%#
    #Order the data so we can see each employee's contribution to business streams in time#
    arrange(AssigneeKeys,Updated) %>%#
    #We wanted to see by month so let's get months with lubridate::month function#
    mutate(task_month=month(Updated)) %>%#
    #Group them by employees to get fractional contributions#
    group_by(AssigneeKeys) %>%#
    #Get fractional contributions in each group#
    mutate(value_perc=value/sum(value)) %>%#
    #Ungroup#
    ungroup() %>%#
    #Let's do one more group by so we can plot employee contributions to business streams over time#
    group_by(AssigneeKeys,bstream) %>%#
    summarise(cum_vp=cumsum(value_perc))
summary_raw <-#
merged_data %>%#
    #Get just the required columns#
    select(AssigneeKeys,Updated,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids or datetime#
    gather(bstream,value,-AssigneeKeys,-Updated) %>%#
    #Order the data so we can see each employee's contribution to business streams in time#
    arrange(AssigneeKeys,Updated) %>%#
    #We wanted to see by month so let's get months with lubridate::month function#
    mutate(task_month=month(Updated)) %>%#
    #Group them by employees to get fractional contributions#
    group_by(AssigneeKeys) %>%#
    #Get fractional contributions in each group#
    mutate(value_perc=value/sum(value)) %>%#
    #Ungroup#
    ungroup() %>%#
    #Let's do one more group by so we can plot employee contributions to business streams over time#
    group_by(AssigneeKeys,bstream) %>%#
    mutate(cum_vp=cumsum(value_perc))
summary_raw
summary_raw %>% #
    group_by(AssigneeKeys,bstream) %>%#
    summarise(contribution=sum(value_perc)) %>%#
    spread(bstream,contribution)
summary_raw %>% #
    group_by(AssigneeKeys,bstream) %>%#
    summarise(contribution=sum(value_perc)) %>%#
    spread(bstream,contribution) %>%#
    mutate(sumcheck=business_stream_1+business_stream_2+business_stream_3)
summary_raw %>% #
    group_by(AssigneeKeys,bstream) %>%#
    summarise(contribution=sum(value_perc)) %>%#
    spread(bstream,contribution) %>%#
    mutate(sumcheck=business_stream_1+business_stream_2+business_stream_3) %>%#
    filter(sumcheck!=1)
summary_raw %>% #
    group_by(AssigneeKeys,bstream) %>%#
    summarise(contribution=round(sum(value_perc),3)) %>%#
    spread(bstream,contribution)
summary_raw
summary_raw <-#
merged_data %>%#
    #Get just the required columns#
    select(AssigneeKeys,Updated,starts_with("business_stream")) %>%#
    #Transform to long format but don't include employee ids or datetime#
    gather(bstream,value,-AssigneeKeys,-Updated) %>%#
    #Order the data so we can see each employee's contribution to business streams in time#
    arrange(AssigneeKeys,Updated) %>%#
    #We wanted to see by month so let's get months with lubridate::month function#
    mutate(task_month=month(Updated)) %>%#
    #Group them by employees to get fractional contributions#
    group_by(AssigneeKeys) %>%#
    #Get fractional contributions in each group#
    mutate(value_perc=value/sum(value)) %>%#
    #Ungroup#
    ungroup() %>%#
    #Let's do one more group by so we can plot employee contributions to business streams over time#
    group_by(AssigneeKeys,bstream) %>%#
    mutate(cum_vp=cumsum(value_perc)) %>%#
    ungroup()
summary_raw %>%#
    #group by employees and business streams#
    group_by(AssigneeKeys,bstream) %>%#
    #get the total of value_percs and round the numbers for convenience#
    summarise(contribution=round(sum(value_perc),3)) %>%#
    #make it into a wide format with spread function#
    spread(key=bstream,value=contribution,fill=0)
write_excel
library(writexl)
write_excel
write_xls
write_xlsx
knitr::kable(summary_table)
summary_table<-#
summary_raw %>%#
    #group by employees and business streams#
    group_by(AssigneeKeys,bstream) %>%#
    #get the total of value_percs and round the numbers for convenience#
    summarise(contribution=round(sum(value_perc),3)) %>%#
    #make it into a wide format with spread function#
    spread(key=bstream,value=contribution,fill=0)
knitr::kable(summary_table)
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
ggplot(summary_raw %>% filter(AssigneeKeys=="employee_1")) + geom_line(aes(x=Updated,y=cum_vp,color=bstream))
ggplot(summary_raw %>% filter(AssigneeKeys=="employee_1")) + #
    geom_line(aes(x=Updated,y=cum_vp,color=bstream)) +#
    theme(legend.position="top")
ggplot(summary_raw %>% filter(AssigneeKeys==my_employee)) +#
    geom_line(aes(x=Updated,y=cum_vp,color=bstream)) +#
    labs(x="Dates",y="Contribution",title=paste0("Contribution of ",my_employee)) +#
    theme(legend.position="top") +#
    theme_void()
my_employee<-"employee_1"#
ggplot(summary_raw %>% filter(AssigneeKeys==my_employee)) +#
    geom_line(aes(x=Updated,y=cum_vp,color=bstream)) +#
    labs(x="Dates",y="Contribution",title=paste0("Contribution of ",my_employee)) +#
    theme(legend.position="top") +#
    theme_void()
ggplot(summary_raw %>% filter(AssigneeKeys==my_employee)) +#
    geom_line(aes(x=Updated,y=cum_vp,color=bstream)) +#
    labs(x="Dates",y="Contribution",title=paste0("Contribution of ",my_employee)) +#
    theme_bw() +#
    theme(legend.position="top")
ggplot(summary_raw %>% filter(AssigneeKeys==my_employee)) +#
    geom_line(aes(x=Updated,y=cum_vp,color=bstream)) +#
    labs(x="Dates",y="Contribution",title=paste0("Contribution of ",my_employee)) +#
    theme_bw() +#
    theme(legend.position="top",title.position="center")
?theme
ggplot(summary_raw %>% filter(AssigneeKeys==my_employee)) +#
    geom_line(aes(x=Updated,y=cum_vp,color=bstream)) +#
    labs(x="Dates",y="Contribution",title=paste0("Contribution of ",my_employee)) +#
    theme_bw() +#
    theme(legend.position="top",plot.title=element_text(hjust=0))
ggplot(summary_raw %>% filter(AssigneeKeys==my_employee)) +#
    geom_line(aes(x=Updated,y=cum_vp,color=bstream)) +#
    labs(x="Dates",y="Contribution",title=paste0("Contribution of ",my_employee)) +#
    # theme_bw() +#
    theme(legend.position="top",plot.title=element_text(hjust=1))
ggplot(summary_raw %>% filter(AssigneeKeys==my_employee)) +#
    geom_line(aes(x=Updated,y=cum_vp,color=bstream)) +#
    labs(x="Dates",y="Contribution",title=paste0("Contribution of ",my_employee)) +#
    # theme_bw() +#
    theme(legend.position="top",plot.title=element_text(hjust=-1))
ggplot(summary_raw %>% filter(AssigneeKeys==my_employee)) +#
    geom_line(aes(x=Updated,y=cum_vp,color=bstream)) +#
    labs(x="Dates",y="Contribution",title=paste0("Contribution of ",my_employee)) +#
    # theme_bw() +#
    theme(legend.position="top",plot.title=element_text(hjust=0.5))
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
rmarkdown::render("/Users/berkorbay/git_repositories/datashow/bsoyer/bsoyer_datashow.Rmd",output_format="html_document")
install.packages("coinmarketcapr",repos="https://cran.r-project.org")
library(coinmarketcapr)#
latest_marketcap <- get_global_marketcap('EUR')
latest_marketcap
coinmarketcapr::get_marketcap_ticker_all("USD")
aaa<-coinmarketcapr::get_marketcap_ticker_all("USD")
head(aaa)
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_05/Lecture_05.Rmd",output_format="html_document")#
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_05/Lecture_05.Rmd",output_format="pdf_document")
read_excel(file.choose())
read_excel(file.choose(),sheet="Sheet1")
?read_excel
aaa<-read_excel(file.choose(),sheet="Sheet1")
glimpse(aaa)
aaa %>% slice(-(1:9))
aaa %>% slice(10:20) %>% data.frame()
aaa %>% slice(8:20) %>% data.frame()
?read_excel
aaa<-read_excel(file.choose(),skip=9,sheet="Sheet1")
aaa
?read_excel
aaa<-read_excel(file.choose(),skip=8,sheet="Sheet1")
aaa
aaa<-read_excel(file.choose(),skip=7,sheet="Sheet1")
aaa
?read_excel
aaa<-read_excel(file.choose(),skip=7,col_names=FALSE,sheet="Sheet1")
aaa
aaa %>% summarise_all(funs(sum(is.na(.))))
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
p_dice = table(expand.grid(1:6,1:6)[,1]+expand.grid(1:6,1:6)[,2])/36#
p_dice
p_dice["7"]
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
1/6*(1/(1-3/4))
1/6*(1/(1-3/4))
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
p_dice["4"]
p_dice["4"]*36
p_lose_4 = p_dice["4"]*(p_dice["7"]*(1/(1-(1-p_dice["7"]-p_dice["4"]))))
p_lose_4
p_lose_4*36
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
?pbirthday
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="html_document")
rmarkdown::render("~/Dropbox/Courses_given/Bilgi_IE_231_2017F/Lectures/Lecture_04/In_Class_Activity_w4_sol.Rmd",output_format="pdf_document")
aaa<-read.csv(file.choose())
aaa
head(aaa)
aaa %>% slice(1:5)
options(stringsAsFactors=FALSE)
aaa<-read.csv(file.choose())
aaa %>% sample_n(5) %>% data.frame()
aaa %>% sample_n(5) %>% data.frame()
aaa %>% sample_n(5) %>% data.frame()
aaa %>% sample_n(5) %>% data.frame()
aaa %>% sample_n(5) %>% data.frame()
aaa %>% sample_n(5) %>% data.frame()
aaa %>% sample_n(5) %>% data.frame()
aaa<-read.csv(file.choose())
tail(aaa)
